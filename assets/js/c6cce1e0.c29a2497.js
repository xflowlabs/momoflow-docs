"use strict";(self.webpackChunkmomoflow_docs=self.webpackChunkmomoflow_docs||[]).push([[691],{1357:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var i=s(4848),o=s(8453);const t={},r="Flow Assignment API",l={id:"api/endpoints/flow-assignment",title:"Flow Assignment API",description:"Overview",source:"@site/docs/api/endpoints/flow-assignment.md",sourceDirName:"api/endpoints",slug:"/api/endpoints/flow-assignment",permalink:"/momoflow-docs/api/endpoints/flow-assignment",draft:!1,unlisted:!1,editUrl:"https://github.com/xflowlabs/momoflow-docs/tree/main/docs/api/endpoints/flow-assignment.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"API Endpoints",permalink:"/momoflow-docs/api/endpoints"},next:{title:"Flow Reporting API",permalink:"/momoflow-docs/api/endpoints/flow-reporting"}},d={},a=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Request Headers",id:"request-headers",level:2},{value:"Request Body Parameters",id:"request-body-parameters",level:2},{value:"Example Request Body",id:"example-request-body",level:3},{value:"Response",id:"response",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Invalid Authentication (401 Unauthorized)",id:"invalid-authentication-401-unauthorized",level:4},{value:"Flow Not Found (404 Not Found)",id:"flow-not-found-404-not-found",level:4},{value:"User Not Found (404 Not Found)",id:"user-not-found-404-not-found",level:4},{value:"Rate Limit Exceeded (429 Too Many Requests)",id:"rate-limit-exceeded-429-too-many-requests",level:4},{value:"Code Examples",id:"code-examples",level:2},{value:"cURL",id:"curl",level:3},{value:"Node.js",id:"nodejs",level:3},{value:"Python",id:"python",level:3},{value:"Rate Limits",id:"rate-limits",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Webhook Notifications",id:"webhook-notifications",level:2},{value:"Need Help?",id:"need-help",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"flow-assignment-api",children:"Flow Assignment API"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Flow Assignment API allows you to programmatically assign flows to users in your organization. This is particularly useful for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automating employee onboarding processes"}),"\n",(0,i.jsx)(n.li,{children:"Scheduling recurring training flows"}),"\n",(0,i.jsx)(n.li,{children:"Integrating MomoFlow with your existing HR systems"}),"\n",(0,i.jsx)(n.li,{children:"Bulk assigning flows to multiple users"}),"\n",(0,i.jsx)(n.li,{children:"Triggering flow assignments based on external events"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-endpoint",children:"POST https://api.momoflow.com/v1/flows/assign\n"})}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"All requests must include your API secret key in the Authorization header. You can generate this key from your MomoFlow dashboard:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Navigate to Settings \u2192 API Keys"}),"\n",(0,i.jsx)(n.li,{children:'Click "Generate New Key"'}),"\n",(0,i.jsx)(n.li,{children:"Copy the key immediately (it won't be shown again)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Authorization: Bearer YOUR_SECRET_KEY\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u26a0\ufe0f Keep your API key secure and never share it in public repositories or client-side code."}),"\n",(0,i.jsx)(n.h2,{id:"request-headers",children:"Request Headers"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Header"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Authorization"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:'Your API key prefixed with "Bearer "'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content-Type"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:'Must be "application/json"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-Request-ID"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Optional request identifier for tracking purposes"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"request-body-parameters",children:"Request Body Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"flowId"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Unique identifier of the flow to be assigned"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"userEmail"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Email address of the assignee"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dueDate"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"ISO 8601 formatted due date for the flow"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"priority"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:'Priority level: "low", "medium", or "high"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"notes"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Additional notes for the assignee"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"example-request-body",children:"Example Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "flowId": "flow_123abc",\n  "userEmail": "employee@company.com",\n  "dueDate": "2024-11-25T23:59:59Z",\n  "priority": "high",\n  "notes": "Please complete this onboarding flow before the team meeting"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,i.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "assignmentId": "asgn_789xyz",\n  "message": "Flow assigned successfully",\n  "details": {\n    "assignedAt": "2024-10-25T15:30:00Z",\n    "assigneeEmail": "employee@company.com",\n    "flowName": "Customer Onboarding",\n    "moduleCount": 5,\n    "estimatedDuration": "2 hours"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,i.jsx)(n.h4,{id:"invalid-authentication-401-unauthorized",children:"Invalid Authentication (401 Unauthorized)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "unauthorized",\n  "message": "Invalid or missing API key"\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"flow-not-found-404-not-found",children:"Flow Not Found (404 Not Found)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "not_found",\n  "message": "Flow with ID \'flow_123abc\' does not exist"\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"user-not-found-404-not-found",children:"User Not Found (404 Not Found)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "not_found",\n  "message": "User with email \'employee@company.com\' does not exist in your organization"\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"rate-limit-exceeded-429-too-many-requests",children:"Rate Limit Exceeded (429 Too Many Requests)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "rate_limit_exceeded",\n  "message": "Too many requests. Please try again in 60 seconds",\n  "retry_after": 60\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,i.jsx)(n.h3,{id:"curl",children:"cURL"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Click to expand"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://api.momoflow.com/v1/flows/assign \\\n  -H "Authorization: Bearer YOUR_SECRET_KEY" \\\n  -H "Content-Type: application/json" \\\n  -H "X-Request-ID: req_unique_id" \\\n  -d \'{\n    "flowId": "flow_123abc",\n    "userEmail": "employee@company.com",\n    "dueDate": "2024-11-25T23:59:59Z",\n    "priority": "high",\n    "notes": "Please complete this onboarding flow before the team meeting"\n  }\'\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"nodejs",children:"Node.js"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Click to expand"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const axios = require('axios');\n\nasync function assignFlow() {\n  try {\n    const response = await axios.post(\n      'https://api.momoflow.com/v1/flows/assign',\n      {\n        flowId: 'flow_123abc',\n        userEmail: 'employee@company.com',\n        dueDate: '2024-11-25T23:59:59Z',\n        priority: 'high',\n        notes: 'Please complete this onboarding flow before the team meeting'\n      },\n      {\n        headers: {\n          'Authorization': 'Bearer YOUR_SECRET_KEY',\n          'Content-Type': 'application/json',\n          'X-Request-ID': 'req_unique_id'\n        }\n      }\n    );\n    \n    console.log('Flow assigned:', response.data);\n  } catch (error) {\n    console.error('Error assigning flow:', error.response.data);\n  }\n}\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Click to expand"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import requests\n\ndef assign_flow():\n    headers = {\n        'Authorization': 'Bearer YOUR_SECRET_KEY',\n        'Content-Type': 'application/json',\n        'X-Request-ID': 'req_unique_id'\n    }\n\n    data = {\n        'flowId': 'flow_123abc',\n        'userEmail': 'employee@company.com',\n        'dueDate': '2024-11-25T23:59:59Z',\n        'priority': 'high',\n        'notes': 'Please complete this onboarding flow before the team meeting'\n    }\n\n    try:\n        response = requests.post(\n            'https://api.momoflow.com/v1/flows/assign',\n            json=data,\n            headers=headers\n        )\n        response.raise_for_status()\n        print('Flow assigned:', response.json())\n    except requests.exceptions.RequestException as e:\n        print('Error assigning flow:', e)\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"rate-limits",children:"Rate Limits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Standard tier: 100 requests per minute"}),"\n",(0,i.jsx)(n.li,{children:"Enterprise tier: 1000 requests per minute"}),"\n",(0,i.jsx)(n.li,{children:"Exceeded rate limits will return a 429 status code"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Always include a unique X-Request-ID header for tracking purposes"}),"\n",(0,i.jsx)(n.li,{children:"Implement exponential backoff for retry logic"}),"\n",(0,i.jsx)(n.li,{children:"Handle all potential error responses in your code"}),"\n",(0,i.jsx)(n.li,{children:"Validate user email addresses before making the API call"}),"\n",(0,i.jsx)(n.li,{children:"Store the returned assignmentId for future reference"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"webhook-notifications",children:"Webhook Notifications"}),"\n",(0,i.jsx)(n.p,{children:"You can configure webhook notifications for assignment events in your MomoFlow dashboard. Available events:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"flow.assigned"}),": Triggered when a flow is successfully assigned"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"flow.started"}),": Triggered when the assignee starts the flow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"flow.completed"}),": Triggered when the flow is completed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"flow.overdue"}),": Triggered when a flow passes its due date"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Contact support at ",(0,i.jsx)(n.a,{href:"mailto:info@momoflow.com",children:"info@momoflow.com"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);